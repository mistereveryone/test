# Script pour désactiver ou limiter la journalisation dans Windows

# Vérifie si le script est exécuté en tant qu'administrateur
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "Ce script doit être exécuté en tant qu'administrateur." -ForegroundColor Red
    exit
}

# 1. Désactiver la journalisation de Microsoft Defender
function Disable-DefenderLogging {
    Write-Host "Désactivation de la journalisation de Microsoft Defender..." -ForegroundColor Yellow
    $regPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender"
    try {
        if (-not (Test-Path $regPath)) {
            Write-Host "Création du chemin : $regPath" -ForegroundColor Yellow
            New-Item -Path $regPath -Force | Out-Null
        }
        Set-ItemProperty -Path $regPath -Name "DisableLogging" -Value 1 -Type DWord
        Write-Host "Journalisation de Microsoft Defender désactivée." -ForegroundColor Green
    } catch {
        Write-Host "Erreur lors de la désactivation de la journalisation de Microsoft Defender : $_" -ForegroundColor Red
    }
}

# 2. Désactiver la journalisation des événements Windows (Event Viewer)
function Disable-EventViewerLogging {
    Write-Host "Désactivation de la journalisation des événements Windows..." -ForegroundColor Yellow
    $logs = @("Application", "Security", "System")
    foreach ($log in $logs) {
        $logPath = "HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\$log"
        try {
            if (Test-Path $logPath) {
                Write-Host "Modification du chemin : $logPath" -ForegroundColor Yellow
                Set-ItemProperty -Path $logPath -Name "Start" -Value 4 -Type DWord
            } else {
                Write-Host "Chemin non trouvé : $logPath" -ForegroundColor Red
            }
        } catch {
            Write-Host "Erreur lors de la désactivation de la journalisation pour $log : $_" -ForegroundColor Red
        }
    }
    Write-Host "Journalisation des événements Windows désactivée." -ForegroundColor Green
}

# 3. Désactiver la journalisation PowerShell
function Disable-PowerShellLogging {
    Write-Host "Désactivation de la journalisation PowerShell..." -ForegroundColor Yellow
    $regPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ModuleLogging"
    try {
        if (-not (Test-Path $regPath)) {
            Write-Host "Création du chemin : $regPath" -ForegroundColor Yellow
            New-Item -Path $regPath -Force | Out-Null
        }
        Set-ItemProperty -Path $regPath -Name "EnableModuleLogging" -Value 0 -Type DWord
        Write-Host "Journalisation PowerShell désactivée." -ForegroundColor Green
    } catch {
        Write-Host "Erreur lors de la désactivation de la journalisation PowerShell : $_" -ForegroundColor Red
    }
}

# 4. Nettoyer les journaux existants
function Clear-ExistingLogs {
    Write-Host "Nettoyage des journaux existants..." -ForegroundColor Yellow
    try {
        # Récupérer la liste des journaux d'événements
        $logs = wevtutil el
        foreach ($log in $logs) {
            try {
                Write-Host "Effacement du journal : $log" -ForegroundColor Yellow
                # Effacer le journal
                wevtutil cl $log
                Write-Host "Journal effacé avec succès : $log" -ForegroundColor Green
            } catch {
                # Gérer les erreurs spécifiques pour chaque journal
                Write-Host "Impossible d'effacer le journal : $log. Erreur : $_" -ForegroundColor Red
            }
        }
        Write-Host "Processus de nettoyage terminé." -ForegroundColor Cyan
    } catch {
        # Gérer les erreurs globales
        Write-Host "Erreur critique lors du nettoyage des journaux : $_" -ForegroundColor Red
    }
}
        Disable-DefenderLogging
        Disable-EventViewerLogging
        Disable-PowerShellLogging
        Clear-ExistingLogs

